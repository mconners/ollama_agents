version: '3.8'

services:
  postgres-sonar:
    image: postgres:13
    container_name: postgres-sonar
    restart: unless-stopped
    networks:
      - ai-network
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar_password
      POSTGRES_DB: sonarqube
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar"]
      interval: 30s
      timeout: 10s
      retries: 3

  ollama-secondary:
    image: ollama/ollama:latest
    container_name: ollama-secondary
    restart: unless-stopped
    networks:
      - ai-network
    volumes:
      - ./data/ollama-secondary:/root/.ollama
      - ./data/ollama-secondary/models:/models
      - /mnt/shared-models:/shared-models:ro  # Read-only access to AGX0 models
    ports:
      - "11435:11434"
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_MODELS=/models
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
          memory: 2G
        limits:
          memory: 4G

  code-server:
    image: codercom/code-server:latest
    container_name: code-server-orin0
    restart: unless-stopped
    networks:
      - ai-network
    environment:
      - PASSWORD=ollama-cluster-dev
    volumes:
      - ./data/codeserver-config:/home/coder/.config
      - ./data/codeserver-workspace:/home/coder/workspace
    ports:
      - "8080:8080"
    depends_on:
      - ollama-secondary

networks:
  ai-network:
    driver: bridge
